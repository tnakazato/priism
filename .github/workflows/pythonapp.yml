# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
        python-version: [3.8]
  
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up environment variable (macOS)
      if: ${{ startsWith(matrix.os, 'macos-') }}
      run: |
        echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV
        echo $GITHUB_ENV
        cat $GITHUB_ENV
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install FFTW3 (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt-get install -y libfftw3-bin libfftw3-dev
      
    - name: Install FFTW3 (macOS)
      if: ${{ startsWith(matrix.os, 'macos-') }}
      run: |
        brew install fftw
        OMP_INCLUDE_FILE=$(find /usr/local/Cellar/libomp -name omp.h | head -n 1)
        echo "OpenMP Header: $OMP_INCLUDE_FILE"
        ln -s $OMP_INCLUDE_FILE /usr/local/include/
        find /usr/local/include -name omp.h     
        OMP_LIBRARY=$(find /usr/local/Cellar/libomp -name libomp.dylib | head -n 1)
        echo "OpenMP Library: $OMP_LIBRARY"
        ln -s $OMP_LIBRARY /usr/local/lib
        find /usr/local/lib -name libomp.dylib
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 python --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 python --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Build PRIISM
      run: |
        ls -l /usr/local/Cellar/libomp/*/include
        ls -l /usr/local/include/omp.h
        python3 setup.py build
      
    - name: Install PRIISM
      run: python3 setup.py install
      
    - name: Test with pytest
      run: |
        pip install pytest
        #pytest
